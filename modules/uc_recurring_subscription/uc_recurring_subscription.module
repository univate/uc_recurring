<?php
// $Id:$

/**
 * @file
 * Uc recurring subscription UI.
 */

/**
 * Implementation of hook_perm().
 */
function uc_recurring_subscription_perm() {
  return array('manage subscriptions');
}

/**
 * Implementation of hook_menu().
 */
function uc_recurring_subscription_menu() {
  $items = array();

  $items['admin/store/subscriptions'] = array(
    'title' => 'Subscription Manager',
    'description' => 'Manage recurring subscription products.',
    'page callback' => 'uc_recurring_subscription_overview',
    'access arguments' => array('manage subscriptions'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'uc_recurring_subscription.admin.inc',
  );
  $items['admin/store/subscriptions/overview'] = array(
    'title' => 'Overview',
    'weight' => -10,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/store/subscriptions/create'] = array(
    'title' => 'Create Subscription',
    'description' => '.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_recurring_subscription_product_form'),
    'access arguments' => array('manage subscriptions'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_recurring_subscription.admin.inc',
  );
  $items['admin/store/subscriptions/%/edit'] = array(
    'title' => 'Edit Subscription',
    'description' => '.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_recurring_subscription_product_form', 3),
    'access arguments' => array('manage subscriptions'),
    'type' => MENU_CALLBACK,
    'file' => 'uc_recurring_subscription.admin.inc',
  );
  $items['node/%/edit/subscription'] = array(
    'title' => 'Subscription',
    'description' => '.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_recurring_subscription_product_form', 1),
    'access callback' => 'uc_product_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_recurring_subscription.admin.inc',
  );

  $items['admin/store/subscriptions/subscribers'] = array(
    'title' => 'Manage Subscribers',
    'description' => '.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_recurring_subscription_subscriber_list'),
    'access arguments' => array('manage subscriptions'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_recurring_subscription.admin.inc',
  );
  $items['admin/store/subscriptions/settings'] = array(
    'title' => 'Subscription Settings',
    'description' => '.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_recurring_subscription_settings_form'),
    'access arguments' => array('manage subscriptions'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_recurring_subscription.admin.inc',
  );
  $items['subscriptions/ahah/%'] = array(
    'page callback' => 'uc_recurring_subscription_ahah',
    'page arguments' => array(2),
    'access arguments' => array('manage subscriptions'),
    'type' => MENU_CALLBACK,
    'file' => 'uc_recurring_subscription.admin.inc',
  );


  return $items;
}

/**
 *
 */
function uc_recurring_subscription_menu_alter(&$items) {
}

/**
 * Load a recurring subscription object.
 */
function uc_recurring_subscription_load($nid) {
  $subscription = db_fetch_object(db_query("SELECT * FROM {uc_recurring_subscription} WHERE nid = %d", $nid));
  if (isset($subscription)) {
    $subscription->roles = empty($subscription->roles) ? array() : unserialize($subscription->roles);
  }
  return $subscription;
}

/**
 * Delete recurring subscription.
 */
function uc_recurring_subscription_delete($nid) {
  db_query("DELETE FROM {uc_recurring_subcription} WHERE nid = %d", $nid);
}

/**
 * For recurring subscriptions we should.
 */
function uc_recurring_subscription_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == variable_get('uc_recurring_subscription_product_class', 'uc_recurring_subscription')) {
    switch ($op) {
      case 'load':
        $node->subscription = uc_recurring_subscription_load($node->nid);
    }
  }
}

/**
 *
 */
function _uc_recurring_subscription_product_feature($product_id) {
  $result = db_query("SELECT pfid from {uc_recurring_products} WHERE nid = '%d'", $product_id);
  while ($p = db_fetch_object($result)) {
    $products[] = uc_recurring_fee_product_load($p->pfid);
  }
  return $products;
}
